[{"C:\\projects\\shop\\client\\src\\index.js":"1","C:\\projects\\shop\\client\\src\\App.js":"2","C:\\projects\\shop\\client\\src\\store\\DeviceStore.js":"3","C:\\projects\\shop\\client\\src\\store\\UserStore.js":"4","C:\\projects\\shop\\client\\src\\components\\AppRouter.js":"5","C:\\projects\\shop\\client\\src\\components\\NavBar.js":"6","C:\\projects\\shop\\client\\src\\http\\userAPI.js":"7","C:\\projects\\shop\\client\\src\\routes.js":"8","C:\\projects\\shop\\client\\src\\http\\index.js":"9","C:\\projects\\shop\\client\\src\\utils\\consts.js":"10","C:\\projects\\shop\\client\\src\\pages\\Reset.js":"11","C:\\projects\\shop\\client\\src\\pages\\ResetPassword.js":"12","C:\\projects\\shop\\client\\src\\pages\\UserPage.js":"13","C:\\projects\\shop\\client\\src\\pages\\AboutUsPage.js":"14","C:\\projects\\shop\\client\\src\\pages\\MakeOrderPage.js":"15","C:\\projects\\shop\\client\\src\\pages\\DevicePage.js":"16","C:\\projects\\shop\\client\\src\\pages\\Auth.js":"17","C:\\projects\\shop\\client\\src\\pages\\Shop.js":"18","C:\\projects\\shop\\client\\src\\http\\deviceAPI.js":"19","C:\\projects\\shop\\client\\src\\http\\orderApi.js":"20","C:\\projects\\shop\\client\\src\\components\\Slider.js":"21","C:\\projects\\shop\\client\\src\\components\\Pages.js":"22","C:\\projects\\shop\\client\\src\\components\\DeviceList.js":"23","C:\\projects\\shop\\client\\src\\components\\TypeBar.js":"24","C:\\projects\\shop\\client\\src\\components\\BrandBar.js":"25","C:\\projects\\shop\\client\\src\\components\\DeviceItem.js":"26","C:\\projects\\shop\\client\\src\\pages\\Basket.js":"27","C:\\projects\\shop\\client\\src\\pages\\Admin.js":"28","C:\\projects\\shop\\client\\src\\components\\modals\\CreateType.js":"29","C:\\projects\\shop\\client\\src\\components\\modals\\CreateBrand.js":"30","C:\\projects\\shop\\client\\src\\components\\modals\\CreateDevice.js":"31"},{"size":480,"mtime":1685655265232,"results":"32","hashOfConfig":"33"},{"size":1019,"mtime":1685655265226,"results":"34","hashOfConfig":"33"},{"size":1505,"mtime":1685655265237,"results":"35","hashOfConfig":"33"},{"size":749,"mtime":1685655265238,"results":"36","hashOfConfig":"33"},{"size":800,"mtime":1685655265227,"results":"37","hashOfConfig":"33"},{"size":3005,"mtime":1685999336178,"results":"38","hashOfConfig":"33"},{"size":1471,"mtime":1685655265232,"results":"39","hashOfConfig":"33"},{"size":1485,"mtime":1685655265237,"results":"40","hashOfConfig":"33"},{"size":428,"mtime":1685655265231,"results":"41","hashOfConfig":"33"},{"size":444,"mtime":1685655265238,"results":"42","hashOfConfig":"33"},{"size":3624,"mtime":1685655265235,"results":"43","hashOfConfig":"33"},{"size":3010,"mtime":1685973621385,"results":"44","hashOfConfig":"33"},{"size":3757,"mtime":1685976962429,"results":"45","hashOfConfig":"33"},{"size":5969,"mtime":1685999336184,"results":"46","hashOfConfig":"33"},{"size":2525,"mtime":1685999336214,"results":"47","hashOfConfig":"33"},{"size":13325,"mtime":1685999427927,"results":"48","hashOfConfig":"33"},{"size":3624,"mtime":1685655265233,"results":"49","hashOfConfig":"33"},{"size":1618,"mtime":1685655265236,"results":"50","hashOfConfig":"33"},{"size":2806,"mtime":1685975457457,"results":"51","hashOfConfig":"33"},{"size":184,"mtime":1685655265232,"results":"52","hashOfConfig":"33"},{"size":1829,"mtime":1685655265229,"results":"53","hashOfConfig":"33"},{"size":877,"mtime":1685655265229,"results":"54","hashOfConfig":"33"},{"size":1149,"mtime":1685655265228,"results":"55","hashOfConfig":"33"},{"size":1025,"mtime":1685655265229,"results":"56","hashOfConfig":"33"},{"size":884,"mtime":1685655265227,"results":"57","hashOfConfig":"33"},{"size":1174,"mtime":1685999336166,"results":"58","hashOfConfig":"33"},{"size":157,"mtime":1685655265233,"results":"59","hashOfConfig":"33"},{"size":3649,"mtime":1685999336199,"results":"60","hashOfConfig":"33"},{"size":1446,"mtime":1685655265231,"results":"61","hashOfConfig":"33"},{"size":1400,"mtime":1685655265230,"results":"62","hashOfConfig":"33"},{"size":7534,"mtime":1685658477954,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"lkic17",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},"C:\\projects\\shop\\client\\src\\index.js",[],["139","140"],"C:\\projects\\shop\\client\\src\\App.js",["141","142","143","144"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport AppRouter from \"./components/AppRouter\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"./index\";\r\nimport {check, getMe} from \"./http/userAPI\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nconst App = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect( async () => {\r\n        check().then(data => {\r\n            user.setUser(data)\r\n            data.role == \"ADMIN\" ? user.setIsAdmin(true) : user.setIsAdmin(false)\r\n            user.setIsAuth(true)\r\n        }).catch((e) => {console.log(e)}).finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <Spinner animation={\"grow\"}/>\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <NavBar />\r\n            <AppRouter />\r\n        </BrowserRouter>\r\n    );\r\n});\r\n\r\nexport default App;\r\n","C:\\projects\\shop\\client\\src\\store\\DeviceStore.js",["145"],"import {makeAutoObservable, set} from \"mobx\";\r\n\r\nexport default class DeviceStore {\r\n    constructor() {\r\n        this._types = []\r\n        this._brands = []\r\n        this._devices = []\r\n        this._selectedType = {}\r\n        this._selectedBrand = {}\r\n        this._page = 1\r\n        this._totalCount = 5\r\n        this._limit = 3\r\n        this._name = \"\"\r\n\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setName(name){\r\n        this._name = name\r\n    }\r\n\r\n    setTypes(types) {\r\n        this._types = types\r\n    }\r\n    setBrands(brands) {\r\n        this._brands = brands\r\n    }\r\n    setDevices(devices) {\r\n        this._devices = devices\r\n    }\r\n\r\n    setSelectedType(type) {\r\n        this.setPage(1)\r\n        this._selectedType = type\r\n    }\r\n    setSelectedBrand(brand) {\r\n        this.setPage(1)\r\n        this._selectedBrand = brand\r\n    }\r\n    setPage(page) {\r\n        this._page = page\r\n    }\r\n    setTotalCount(count) {\r\n        this._totalCount = count\r\n    }\r\n\r\n    get name() {\r\n        return this._name\r\n    }\r\n\r\n    get types() {\r\n        return this._types\r\n    }\r\n    get brands() {\r\n        return this._brands\r\n    }\r\n    get devices() {\r\n        return this._devices\r\n    }\r\n    get selectedType() {\r\n        return this._selectedType\r\n    }\r\n    get selectedBrand() {\r\n        return this._selectedBrand\r\n    }\r\n    get totalCount() {\r\n        return this._totalCount\r\n    }\r\n    get page() {\r\n        return this._page\r\n    }\r\n    get limit() {\r\n        return this._limit\r\n    }\r\n}\r\n","C:\\projects\\shop\\client\\src\\store\\UserStore.js",[],"C:\\projects\\shop\\client\\src\\components\\AppRouter.js",[],"C:\\projects\\shop\\client\\src\\components\\NavBar.js",["146","147","148"],"C:\\projects\\shop\\client\\src\\http\\userAPI.js",[],"C:\\projects\\shop\\client\\src\\routes.js",["149","150"],"import Admin from \"./pages/Admin\";\r\nimport {\r\n    ADMIN_ROUTE,\r\n    BASKET_ROUTE,\r\n    DEVICE_ROUTE,\r\n    LOGIN_ROUTE,\r\n    REGISTRATION_ROUTE,\r\n    SHOP_ROUTE,\r\n    ORDER_MAKE,\r\n    ABOUT_ROUTE,\r\n    USER_PAGE_ROUTE, RESET_ROUTE, RESET_PASSWORD_ROUTE\r\n} from \"./utils/consts\";\r\nimport Basket from \"./pages/Basket\";\r\nimport Shop from \"./pages/Shop\";\r\nimport Auth from \"./pages/Auth\";\r\nimport DevicePage from \"./pages/DevicePage\";\r\nimport MakeOrderPage from './pages/MakeOrderPage';\r\nimport AboutUsPage from \"./pages/AboutUsPage\";\r\nimport UserPage from \"./pages/UserPage\";\r\nimport Reset from \"./pages/Reset\";\r\nimport ResetPassword from \"./pages/ResetPassword\";\r\n\r\nexport const adminRoutes = [\r\n    {\r\n        path: ADMIN_ROUTE,\r\n        Component: Admin\r\n    },\r\n]\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: SHOP_ROUTE,\r\n        Component: Shop\r\n    },\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: RESET_ROUTE,\r\n        Component: Reset\r\n    },\r\n    {\r\n        path: RESET_PASSWORD_ROUTE,\r\n        Component: ResetPassword\r\n    },\r\n    {\r\n        path: REGISTRATION_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: DEVICE_ROUTE + '/:id',\r\n        Component: DevicePage\r\n    },\r\n    {\r\n        path: ORDER_MAKE + '/:id',\r\n        Component: MakeOrderPage\r\n    },\r\n    {\r\n        path: ABOUT_ROUTE,\r\n        Component: AboutUsPage\r\n    },\r\n    {\r\n        path: USER_PAGE_ROUTE,\r\n        Component: UserPage\r\n    }\r\n]\r\n","C:\\projects\\shop\\client\\src\\http\\index.js",[],"C:\\projects\\shop\\client\\src\\utils\\consts.js",[],"C:\\projects\\shop\\client\\src\\pages\\Reset.js",[],"C:\\projects\\shop\\client\\src\\pages\\ResetPassword.js",[],"C:\\projects\\shop\\client\\src\\pages\\UserPage.js",["151","152"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Container, Form, Image} from \"react-bootstrap\";\r\nimport {useHistory,} from \"react-router-dom\";\r\nimport {Context} from \"../index\";\r\nimport {fetchOneDevice, myFav} from \"../http/deviceAPI\";\r\nimport {DEVICE_ROUTE} from \"../utils/consts\";\r\nimport {changePhoto, getMe} from \"../http/userAPI\";\r\n\r\n\r\n\r\nconst UserPage = () => {\r\n    const {user} = useContext(Context)\r\n    const [photo, setPhoto] = useState(null)\r\n    const history = useHistory()\r\n    const [devices, setDevices] = useState([])\r\n    const [file, setFile] = useState(null)\r\n    const [saveButtonDisabled, setSaveButtonDisabled] = useState(true)\r\n    useEffect(async () => {\r\n        let res = await myFav(user.id)\r\n        let devices = [];\r\n\r\n        for (let i = 0; i < res.length; i++) {\r\n            let device = await fetchOneDevice(res[i].deviceId);\r\n            devices.push(device);\r\n        }\r\n        setDevices(devices);\r\n        setPhoto(user.photo)\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     console.log(user.photo)\r\n    //     setPhoto(user.photo)\r\n    // }, [])\r\n\r\n    const selectFile = e => {\r\n        const selectedFile = e.target.files[0]\r\n        if (selectedFile && selectedFile.type.startsWith('image/')) {\r\n            setFile(selectedFile)\r\n            setSaveButtonDisabled(false)\r\n        } else {\r\n            setFile(null)\r\n            setSaveButtonDisabled(true)\r\n        }\r\n    }\r\n\r\n    const savePhoto = async () => {\r\n        if (saveButtonDisabled) return null\r\n        await changePhoto(file)\r\n        const data = await getMe()\r\n        user.setUser(data)\r\n        setPhoto(data.photo)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"profile_container\">\r\n                <div className=\"profile_email\">\r\n                    <h3>Вы вошли в аккаунт под почтой:</h3>\r\n                    <p>{user.email}</p>\r\n                </div>\r\n                <div className=\"change_photo\">\r\n                    <h4>Изменить фото:</h4>\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <div\r\n                        className=\"save_photo\"\r\n                        onClick={savePhoto}\r\n                        disabled={saveButtonDisabled}\r\n                        style={{opacity: saveButtonDisabled ? 0.5 : 1}}\r\n                    >\r\n                        Сохранить фото\r\n                    </div>\r\n                </div>\r\n                <div className=\"photo_container\">\r\n                    <Image\r\n                        src={\r\n                            photo\r\n                                ? process.env.REACT_APP_API_URL + photo\r\n                                : `https://ui-avatars.com/api/?background=random&name=${user.email}&size=250`\r\n                        }\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <h4>Избранные товары:</h4>\r\n            <div>\r\n                {devices.map((device, index) => (\r\n                    <div\r\n                        className='fav_item'\r\n                        key={index}\r\n                        onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}\r\n                    >\r\n                        <p><b>{device.name}</b></p>\r\n                        <Image style={{maxHeight:50}} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                        <p>Цена: {device.price} р.</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default UserPage;","C:\\projects\\shop\\client\\src\\pages\\AboutUsPage.js",["153","154","155","156","157","158"],"C:\\projects\\shop\\client\\src\\pages\\MakeOrderPage.js",["159"],"C:\\projects\\shop\\client\\src\\pages\\DevicePage.js",["160","161","162","163","164","165","166","167","168"],"C:\\projects\\shop\\client\\src\\pages\\Auth.js",["169"],"import React, {useContext, useState} from 'react';\r\nimport {Container, Form} from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, RESET_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {login, registration} from \"../http/userAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data;\r\n            if (isLogin) {\r\n                data = await login(email, password);\r\n                user.setUser(data.user)\r\n            } else {\r\n                data = await registration(email, password);\r\n                console.log(data)\r\n            }\r\n            user.setIsAuth(true)\r\n            if (data.user.role == \"ADMIN\") {\r\n                user.setIsAdmin(true)\r\n            } else {\r\n                user.setIsAdmin(false)\r\n            }\r\n            history.push(SHOP_ROUTE)\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container\r\n\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n            style={{height: window.innerHeight - 54}}\r\n        >\r\n            <Card style={{width: 600}} className=\"p-5\">\r\n\r\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\r\n                <Form className=\"d-flex flex-column\">\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите вашу эл. почту\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите ваш пароль\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\r\n                        {isLogin ?\r\n                            <div className=\"reg_container\">\r\n                                <div>Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink></div>\r\n                                <div>Забыли пароль? <NavLink to={RESET_ROUTE}>Восстановить!</NavLink></div>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\r\n                            </div>\r\n                        }\r\n                        <Button\r\n                            variant={\"outline-success\"}\r\n                            onClick={click}\r\n                        >\r\n                            {isLogin ? 'Войти' : 'Регистрация'}\r\n                        </Button>\r\n                    </Row>\r\n\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;\r\n","C:\\projects\\shop\\client\\src\\pages\\Shop.js",["170","171"],"import React, {useContext, useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    const {device} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        fetchDevices(null, null, 1, null, 4 ).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, device.name, 4).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand, device.name])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-3\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar/>\r\n                    <DeviceList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n","C:\\projects\\shop\\client\\src\\http\\deviceAPI.js",["172","173","174","175"],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const {data} = await $authHost.post('api/brand', brand)\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const {data} = await $host.get('api/brand', )\r\n    return data\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    const {data} = await $authHost.post('api/device', device)\r\n    return data\r\n}\r\n\r\nexport const fetchDevices = async (typeId, brandId, page, name, limit = 3) => {\r\n    const {data} = await $host.get('api/device', {params: {\r\n            typeId, brandId, page, limit, name\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const {data} = await $host.get('api/device/' + id)\r\n    return data\r\n}\r\n\r\nexport const deleteDevice = async (id) => {\r\n    const {data} = await $host.post('api/device/delete/' + id)\r\n    return data;\r\n}\r\n\r\nexport const addToFav = async (item, user) => {\r\n    await $host.post('api/fav/add_to_fav/', {itemId: item, userId: user})\r\n}\r\n\r\nexport const delToFav = async (item, user) => {\r\n    await $host.post('api/fav/del_to_fav/', {itemId: item, userId: user})\r\n}\r\n\r\nexport const myFav = async (id) => {\r\n    const {data} = await $host.post('api/fav/get_all/', {userId: id})\r\n    return data\r\n}\r\n\r\nexport const isFav = async (item, user) => {\r\n    const {data} = await $host.post('api/fav/is_fav/', {itemId: item, userId: user})\r\n    return data.isFavorite\r\n}\r\n\r\nexport const updatePrice = async (id, newPrice) => {\r\n    const { data } = await $host.put(`api/device/price/${id}`, { price: newPrice });\r\n    return data;\r\n};\r\n\r\nexport const updateName = async (id, newName) => {\r\n    const { data } = await $host.put(`api/device/name/${id}`, { name: newName });\r\n    return data;\r\n};\r\n\r\nexport const updatePhoto = async (id, photo, num) => {\r\n    const formData = new FormData();\r\n    formData.append('photo', photo);\r\n    const {data} = await $host.patch(`api/device/photo/${id}?item=${num}`, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n    return data;\r\n}\r\n\r\nexport const deleteInfo = async (id) => {\r\n    const data = await $host.delete(`api/info/${id}`)\r\n}\r\n\r\nexport const postInfo = async (id, title, description) => {\r\n    const data = await $host.post('api/info/', {id: id, title: title, description: description})\r\n}\r\n\r\nexport const changeInfo = async (id, title, description) => {\r\n    const data = await $host.patch(`api/info/${id}`, {id: id, title: title, description: description})\r\n}","C:\\projects\\shop\\client\\src\\http\\orderApi.js",["176"],"import {$authHost, $host} from \"./index\";\r\n\r\nexport const makeOrder = async (email, id) => {\r\n    const {data} = await $host.post('api/order/create', {email, id})\r\n    return data\r\n}\r\n","C:\\projects\\shop\\client\\src\\components\\Slider.js",["177","178"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {Carousel} from \"react-bootstrap\";\r\n\r\nconst Slider = ({device}) => {\r\n    const [index, setIndex] = useState(0);\r\n    const [sliderClass, setSliderClass] = useState('')\r\n\r\n    const handleSelect = (selectedIndex) => {\r\n        setIndex(selectedIndex);\r\n    };\r\n\r\n    useEffect(() => {\r\n        (!!device.img2 || !!device.img3) ? setSliderClass(\"active-btns\") : setSliderClass(\"disabled-btns\")\r\n    }, [device.img2, device.img3])\r\n\r\n    return (\r\n        <div className={sliderClass}>\r\n            <Carousel className=\"device_slider\" activeIndex={index} onSelect={handleSelect}>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={process.env.REACT_APP_API_URL + device.img}\r\n                        alt=\"First slide\"\r\n                    />\r\n                </Carousel.Item>\r\n                {\r\n                    device.img2 &&\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={process.env.REACT_APP_API_URL + device.img2}\r\n                            alt=\"Second slide\"\r\n                        />\r\n                    </Carousel.Item>\r\n                }\r\n                {\r\n                    device.img3 &&\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={process.env.REACT_APP_API_URL + device.img3}\r\n                            alt=\"Third slide\"\r\n                        />\r\n                    </Carousel.Item>\r\n                }\r\n            </Carousel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Slider;\r\n","C:\\projects\\shop\\client\\src\\components\\Pages.js",[],"C:\\projects\\shop\\client\\src\\components\\DeviceList.js",[],"C:\\projects\\shop\\client\\src\\components\\TypeBar.js",["179"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst TypeBar = observer(() => {\r\n    const {device} = useContext(Context)\r\n    return (\r\n        <ul className=\"list-group list-group-item-dark\">\r\n            <ListGroup>\r\n            {device.types.map(type =>\r\n                <ListGroup.Item\r\n                    style={{cursor: 'pointer'}}\r\n                    text = \"#eee9fa\"\r\n                    active={type.id === device.selectedType.id}\r\n                    className=\"p-3 ml-2\"\r\n                    onClick={() => device.setSelectedType(type)}\r\n                    border={type.id === device.selectedType.id ? '#eee9fa' : '#eee9fa'}\r\n                    key={type.id}\r\n                >\r\n                    {type.name}\r\n\r\n                </ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n            </ul>);\r\n\r\n});\r\n\r\nexport default TypeBar;\r\n","C:\\projects\\shop\\client\\src\\components\\BrandBar.js",[],"C:\\projects\\shop\\client\\src\\components\\DeviceItem.js",["180"],"C:\\projects\\shop\\client\\src\\pages\\Basket.js",[],"C:\\projects\\shop\\client\\src\\pages\\Admin.js",[],"C:\\projects\\shop\\client\\src\\components\\modals\\CreateType.js",[],"C:\\projects\\shop\\client\\src\\components\\modals\\CreateBrand.js",["181"],"import React, {useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {createBrand, createType} from \"../../http/deviceAPI\";\r\n\r\nconst CreateBrand = ({show, onHide}) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const addBrand = () => {\r\n        createBrand({name: value}).then(data => {\r\n            setValue('')\r\n            onHide()\r\n        })\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить цвет\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={value}\r\n                        onChange={e => setValue(e.target.value)}\r\n                        placeholder={\"Введите цвет\"}\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateBrand;\r\n","C:\\projects\\shop\\client\\src\\components\\modals\\CreateDevice.js",["182","183"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [file, setFile] = useState(null)\r\n    const [file2, setFile2] = useState(null)\r\n    const [file3, setFile3] = useState(null)\r\n    const [info, setInfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n    const selectFile2 = e => {\r\n        setFile2(e.target.files[0])\r\n    }\r\n    const selectFile3 = e => {\r\n        setFile3(e.target.files[0])\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', `${price}`)\r\n        formData.append('img', file)\r\n        formData.append('img2', file2)\r\n        formData.append('img3', file3)\r\n        formData.append('brandId', device.selectedBrand.id)\r\n        formData.append('typeId', device.selectedType.id)\r\n        formData.append('info', JSON.stringify(info))\r\n        createDevice(formData).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить наименование\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип изделия\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedType(type)}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите цвет\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.brands.map(brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedBrand(brand)}\r\n                                    key={brand.id}\r\n                                >\r\n                                    {brand.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название изделия\"\r\n                    />\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={(e) => {\r\n                            const inputValue = e.target.value;\r\n                            const priceRegex = /^\\d+(\\.\\d{1,2})?$/;\r\n\r\n                            if (priceRegex.test(inputValue) || '') {\r\n                                setPrice(inputValue);\r\n                            }\r\n                        }}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость изделия\"\r\n                        type=\"number\"\r\n                    />\r\n                    <div className=\"device_photos_inputs_container\">\r\n                        <p>Первое фото:</p>\r\n                        <Form.Control\r\n                            className=\"mt-3\"\r\n                            type=\"file\"\r\n                            onChange={selectFile}\r\n                        />\r\n                        <p>Второе фото:</p>\r\n                        <Form.Control\r\n                            className=\"mt-3\"\r\n                            type=\"file\"\r\n                            onChange={selectFile2}\r\n                        />\r\n                        <p>Третье фото:</p>\r\n                        <Form.Control\r\n                            className=\"mt-3\"\r\n                            type=\"file\"\r\n                            onChange={selectFile3}\r\n                        />\r\n                    </div>\r\n                    <hr/>\r\n                    <Button\r\n                        variant={\"outline-light\"}\r\n                        onClick={addInfo}\r\n                    >\r\n                        Добавить новую характеристику\r\n                    </Button>\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Характеристика\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.description}\r\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\r\n                                    placeholder=\"Описание\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant={\"outline-danger\"}\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateDevice;\r\n",{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":7,"column":16,"nodeType":"190","messageId":"191","endLine":7,"endColumn":21},{"ruleId":"192","severity":1,"message":"193","line":13,"column":16,"nodeType":"194","endLine":19,"endColumn":6},{"ruleId":"195","severity":1,"message":"196","line":16,"column":23,"nodeType":"197","messageId":"198","endLine":16,"endColumn":25},{"ruleId":"192","severity":1,"message":"199","line":19,"column":8,"nodeType":"200","endLine":19,"endColumn":10,"suggestions":"201"},{"ruleId":"188","severity":1,"message":"202","line":1,"column":29,"nodeType":"190","messageId":"191","endLine":1,"endColumn":32},{"ruleId":"188","severity":1,"message":"203","line":6,"column":22,"nodeType":"190","messageId":"191","endLine":6,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":24,"column":15,"nodeType":"194","endLine":27,"endColumn":6},{"ruleId":"192","severity":1,"message":"199","line":27,"column":8,"nodeType":"200","endLine":27,"endColumn":10,"suggestions":"204"},{"ruleId":"188","severity":1,"message":"205","line":4,"column":5,"nodeType":"190","messageId":"191","endLine":4,"endColumn":17},{"ruleId":"188","severity":1,"message":"206","line":13,"column":8,"nodeType":"190","messageId":"191","endLine":13,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":18,"column":15,"nodeType":"194","endLine":28,"endColumn":6},{"ruleId":"192","severity":1,"message":"207","line":28,"column":8,"nodeType":"200","endLine":28,"endColumn":10,"suggestions":"208"},{"ruleId":"188","severity":1,"message":"209","line":1,"column":28,"nodeType":"190","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"188","severity":1,"message":"210","line":2,"column":17,"nodeType":"190","messageId":"191","endLine":2,"endColumn":21},{"ruleId":"188","severity":1,"message":"211","line":3,"column":23,"nodeType":"190","messageId":"191","endLine":3,"endColumn":34},{"ruleId":"188","severity":1,"message":"212","line":6,"column":9,"nodeType":"190","messageId":"191","endLine":6,"endColumn":17},{"ruleId":"188","severity":1,"message":"213","line":7,"column":29,"nodeType":"190","messageId":"191","endLine":7,"endColumn":35},{"ruleId":"188","severity":1,"message":"214","line":15,"column":19,"nodeType":"190","messageId":"191","endLine":15,"endColumn":25},{"ruleId":"192","severity":1,"message":"215","line":14,"column":8,"nodeType":"200","endLine":14,"endColumn":10,"suggestions":"216"},{"ruleId":"188","severity":1,"message":"217","line":2,"column":45,"nodeType":"190","messageId":"191","endLine":2,"endColumn":50},{"ruleId":"188","severity":1,"message":"218","line":37,"column":21,"nodeType":"190","messageId":"191","endLine":37,"endColumn":31},{"ruleId":"192","severity":1,"message":"193","line":77,"column":15,"nodeType":"194","endLine":81,"endColumn":6},{"ruleId":"192","severity":1,"message":"219","line":81,"column":8,"nodeType":"200","endLine":81,"endColumn":10,"suggestions":"220"},{"ruleId":"188","severity":1,"message":"221","line":125,"column":13,"nodeType":"190","messageId":"191","endLine":125,"endColumn":17},{"ruleId":"188","severity":1,"message":"221","line":130,"column":15,"nodeType":"190","messageId":"191","endLine":130,"endColumn":19},{"ruleId":"188","severity":1,"message":"221","line":139,"column":15,"nodeType":"190","messageId":"191","endLine":139,"endColumn":19},{"ruleId":"188","severity":1,"message":"221","line":150,"column":15,"nodeType":"190","messageId":"191","endLine":150,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":266,"column":46,"nodeType":"197","messageId":"198","endLine":266,"endColumn":48},{"ruleId":"195","severity":1,"message":"196","line":31,"column":32,"nodeType":"197","messageId":"198","endLine":31,"endColumn":34},{"ruleId":"192","severity":1,"message":"222","line":23,"column":8,"nodeType":"200","endLine":23,"endColumn":10,"suggestions":"223"},{"ruleId":"192","severity":1,"message":"222","line":30,"column":8,"nodeType":"200","endLine":30,"endColumn":77,"suggestions":"224"},{"ruleId":"188","severity":1,"message":"225","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":18},{"ruleId":"188","severity":1,"message":"221","line":84,"column":11,"nodeType":"190","messageId":"191","endLine":84,"endColumn":15},{"ruleId":"188","severity":1,"message":"221","line":88,"column":11,"nodeType":"190","messageId":"191","endLine":88,"endColumn":15},{"ruleId":"188","severity":1,"message":"221","line":92,"column":11,"nodeType":"190","messageId":"191","endLine":92,"endColumn":15},{"ruleId":"188","severity":1,"message":"226","line":1,"column":9,"nodeType":"190","messageId":"191","endLine":1,"endColumn":18},{"ruleId":"188","severity":1,"message":"227","line":1,"column":16,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"188","severity":1,"message":"228","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":11},{"ruleId":"188","severity":1,"message":"229","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":11},{"ruleId":"188","severity":1,"message":"210","line":2,"column":9,"nodeType":"190","messageId":"191","endLine":2,"endColumn":13},{"ruleId":"188","severity":1,"message":"230","line":4,"column":22,"nodeType":"190","messageId":"191","endLine":4,"endColumn":32},{"ruleId":"188","severity":1,"message":"231","line":5,"column":36,"nodeType":"190","messageId":"191","endLine":5,"endColumn":48},{"ruleId":"192","severity":1,"message":"222","line":20,"column":8,"nodeType":"200","endLine":20,"endColumn":10,"suggestions":"232"},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'getMe' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["235"],"'set' is defined but never used.","'ADMIN_ROUTE' is defined but never used.",["236"],"'BASKET_ROUTE' is defined but never used.","'Basket' is defined but never used.","React Hook useEffect has missing dependencies: 'user.id' and 'user.photo'. Either include them or remove the dependency array.",["237"],"'useState' is defined but never used.","'Card' is defined but never used.","'LOGIN_ROUTE' is defined but never used.","'observer' is defined but never used.","'device' is defined but never used.","'logOut' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["238"],"'Image' is defined but never used.","'setIsAdmin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'user.id'. Either include them or remove the dependency array.",["239"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["240"],["241"],"'jwt_decode' is defined but never used.","'$authHost' is defined but never used.","'useContext' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'createType' is defined but never used.","'fetchDevices' is defined but never used.",["242"],"no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"243","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"252","fix":"256"},"Update the dependencies array to be: [user]",{"range":"257","text":"258"},{"range":"259","text":"258"},"Update the dependencies array to be: [user.id, user.photo]",{"range":"260","text":"261"},"Update the dependencies array to be: [id]",{"range":"262","text":"263"},"Update the dependencies array to be: [id, user.id]",{"range":"264","text":"265"},"Update the dependencies array to be: [device]",{"range":"266","text":"267"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device.name, device]",{"range":"268","text":"269"},{"range":"270","text":"267"},[785,787],"[user]",[939,941],[1000,1002],"[user.id, user.photo]",[552,554],"[id]",[2499,2501],"[id, user.id]",[904,906],"[device]",[1156,1225],"[device.page, device.selectedType, device.selectedBrand, device.name, device]",[856,858]]