[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/store/UserStore.js":"3","/app/src/store/DeviceStore.js":"4","/app/src/components/NavBar.js":"5","/app/src/components/AppRouter.js":"6","/app/src/http/userAPI.js":"7","/app/src/routes.js":"8","/app/src/utils/consts.js":"9","/app/src/http/index.js":"10","/app/src/pages/AboutUsPage.js":"11","/app/src/pages/MakeOrderPage.js":"12","/app/src/pages/DevicePage.js":"13","/app/src/pages/Shop.js":"14","/app/src/pages/Auth.js":"15","/app/src/pages/Basket.js":"16","/app/src/pages/Admin.js":"17","/app/src/http/orderApi.js":"18","/app/src/http/deviceAPI.js":"19","/app/src/components/Pages.js":"20","/app/src/components/TypeBar.js":"21","/app/src/components/DeviceList.js":"22","/app/src/components/BrandBar.js":"23","/app/src/components/modals/CreateDevice.js":"24","/app/src/components/modals/CreateType.js":"25","/app/src/components/modals/CreateBrand.js":"26","/app/src/components/DeviceItem.js":"27","/app/src/pages/UserPage.js":"28"},{"size":480,"mtime":1684075541612,"results":"29","hashOfConfig":"30"},{"size":1019,"mtime":1684190363002,"results":"31","hashOfConfig":"30"},{"size":749,"mtime":1684081770205,"results":"32","hashOfConfig":"30"},{"size":1505,"mtime":1684010883891,"results":"33","hashOfConfig":"30"},{"size":2910,"mtime":1684190363006,"results":"34","hashOfConfig":"30"},{"size":800,"mtime":1684010883884,"results":"35","hashOfConfig":"30"},{"size":1167,"mtime":1684190644376,"results":"36","hashOfConfig":"30"},{"size":1207,"mtime":1684065726663,"results":"37","hashOfConfig":"30"},{"size":350,"mtime":1684065466592,"results":"38","hashOfConfig":"30"},{"size":428,"mtime":1684010883891,"results":"39","hashOfConfig":"30"},{"size":5972,"mtime":1684010883891,"results":"40","hashOfConfig":"30"},{"size":2555,"mtime":1684010883891,"results":"41","hashOfConfig":"30"},{"size":8925,"mtime":1684189392710,"results":"42","hashOfConfig":"30"},{"size":1618,"mtime":1684010883891,"results":"43","hashOfConfig":"30"},{"size":3438,"mtime":1684081725702,"results":"44","hashOfConfig":"30"},{"size":157,"mtime":1684010883891,"results":"45","hashOfConfig":"30"},{"size":3855,"mtime":1684010883891,"results":"46","hashOfConfig":"30"},{"size":184,"mtime":1684010883891,"results":"47","hashOfConfig":"30"},{"size":2617,"mtime":1684188711694,"results":"48","hashOfConfig":"30"},{"size":877,"mtime":1684010883891,"results":"49","hashOfConfig":"30"},{"size":1025,"mtime":1684010883891,"results":"50","hashOfConfig":"30"},{"size":1172,"mtime":1684010883884,"results":"51","hashOfConfig":"30"},{"size":884,"mtime":1684010883884,"results":"52","hashOfConfig":"30"},{"size":6226,"mtime":1684077874902,"results":"53","hashOfConfig":"30"},{"size":1446,"mtime":1684010883891,"results":"54","hashOfConfig":"30"},{"size":1400,"mtime":1684010883891,"results":"55","hashOfConfig":"30"},{"size":1218,"mtime":1684010883884,"results":"56","hashOfConfig":"30"},{"size":2649,"mtime":1684184392858,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"mywc4e",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"60"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"60"},"/app/src/index.js",[],["129","130"],"/app/src/App.js",["131","132","133","134"],"/app/src/store/UserStore.js",[],"/app/src/store/DeviceStore.js",["135"],"import {makeAutoObservable, set} from \"mobx\";\r\n\r\nexport default class DeviceStore {\r\n    constructor() {\r\n        this._types = []\r\n        this._brands = []\r\n        this._devices = []\r\n        this._selectedType = {}\r\n        this._selectedBrand = {}\r\n        this._page = 1\r\n        this._totalCount = 5\r\n        this._limit = 3\r\n        this._name = \"\"\r\n\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setName(name){\r\n        this._name = name\r\n    }\r\n\r\n    setTypes(types) {\r\n        this._types = types\r\n    }\r\n    setBrands(brands) {\r\n        this._brands = brands\r\n    }\r\n    setDevices(devices) {\r\n        this._devices = devices\r\n    }\r\n\r\n    setSelectedType(type) {\r\n        this.setPage(1)\r\n        this._selectedType = type\r\n    }\r\n    setSelectedBrand(brand) {\r\n        this.setPage(1)\r\n        this._selectedBrand = brand\r\n    }\r\n    setPage(page) {\r\n        this._page = page\r\n    }\r\n    setTotalCount(count) {\r\n        this._totalCount = count\r\n    }\r\n\r\n    get name() {\r\n        return this._name\r\n    }\r\n\r\n    get types() {\r\n        return this._types\r\n    }\r\n    get brands() {\r\n        return this._brands\r\n    }\r\n    get devices() {\r\n        return this._devices\r\n    }\r\n    get selectedType() {\r\n        return this._selectedType\r\n    }\r\n    get selectedBrand() {\r\n        return this._selectedBrand\r\n    }\r\n    get totalCount() {\r\n        return this._totalCount\r\n    }\r\n    get page() {\r\n        return this._page\r\n    }\r\n    get limit() {\r\n        return this._limit\r\n    }\r\n}\r\n","/app/src/components/NavBar.js",["136","137","138"],"/app/src/components/AppRouter.js",[],"/app/src/http/userAPI.js",[],"/app/src/routes.js",["139","140"],"import Admin from \"./pages/Admin\";\r\nimport {\r\n    ADMIN_ROUTE,\r\n    BASKET_ROUTE,\r\n    DEVICE_ROUTE,\r\n    LOGIN_ROUTE,\r\n    REGISTRATION_ROUTE,\r\n    SHOP_ROUTE,\r\n    ORDER_MAKE,\r\n    ABOUT_ROUTE,\r\n    USER_PAGE_ROUTE\r\n} from \"./utils/consts\";\r\nimport Basket from \"./pages/Basket\";\r\nimport Shop from \"./pages/Shop\";\r\nimport Auth from \"./pages/Auth\";\r\nimport DevicePage from \"./pages/DevicePage\";\r\nimport MakeOrderPage from './pages/MakeOrderPage';\r\nimport AboutUsPage from \"./pages/AboutUsPage\";\r\nimport UserPage from \"./pages/UserPage\";\r\n\r\nexport const adminRoutes = [\r\n    {\r\n        path: ADMIN_ROUTE,\r\n        Component: Admin\r\n    },\r\n]\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: SHOP_ROUTE,\r\n        Component: Shop\r\n    },\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: REGISTRATION_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: DEVICE_ROUTE + '/:id',\r\n        Component: DevicePage\r\n    },\r\n    {\r\n        path: ORDER_MAKE + '/:id',\r\n        Component: MakeOrderPage\r\n    },\r\n    {\r\n        path: ABOUT_ROUTE,\r\n        Component: AboutUsPage\r\n    },\r\n    {\r\n        path: USER_PAGE_ROUTE,\r\n        Component: UserPage\r\n    }\r\n]\r\n","/app/src/utils/consts.js",[],"/app/src/http/index.js",[],"/app/src/pages/AboutUsPage.js",["141","142","143","144","145","146"],"import React, {useContext, useState} from 'react';\r\nimport {Button, Card, Col, Container, Image} from \"react-bootstrap\";\r\nimport {DEVICE_ROUTE, LOGIN_ROUTE} from \"../utils/consts\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Context} from \"../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {DefaultAllowlist as device} from \"bootstrap/js/src/util/sanitizer\";\r\n\r\n\r\n\r\n    const AboutUsPage = () => {\r\n\r\n            const {user} = useContext(Context)\r\n            const history = useHistory()\r\n            const logOut = () => {\r\n                user.setUser({})\r\n                user.setIsAuth(false)\r\n                localStorage.removeItem('token')\r\n            }\r\n\r\n        return (\r\n            <Container>\r\n                <div className=\"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center\">\r\n                    <div className=\"col-md-18 p-lg-2 mx-auto my-3\">\r\n                        <h1 className=\"display-4 font-weight-normal text-success\">Изделия из кожи</h1>\r\n                        <p className=\"lead font-weight-normal\">Изделия из кожи - Наши дизайнеры регулярно посещают знаменитые выставки в городе Милан (Италия),\r\n                            где перенимают международный опыт и черпают вдохновение для своих будущих коллекций. Стильные, созданные по традиционной технологии,\r\n                            аксессуары из натуральной кожи обладают особым шармом.!</p>\r\n\r\n                        <p className=\"lead font-weight-normal text-success\"> © Изделия из кожи - «Уникально. Индивидуально. Безупречно.»</p>\r\n\r\n                        <Button variant={\"outline-info\"} onClick={() => history.push(DEVICE_ROUTE)}>Наша продукция!</Button>\r\n                    </div>\r\n                    <div className=\"product-device box-shadow d-none d-md-block\"/>\r\n                    <div className=\"product-device product-device-2 box-shadow d-none d-md-block\"/>\r\n                </div>\r\n\r\n                <div className=\"d-md-flex flex-md-equal w-150 my-md-3 pl-md-3\">\r\n                    <div className=\"bg-light mr-md-3 pt-3 px-3 pt-md-2 px-md-3 text-center overflow-hidden\">\r\n                        <div className=\"my-3 p-3\">\r\n                            <h2 className=\"display-5\">Коллекция \"Royal\"</h2>\r\n                            <p className=\"lead\">«Грация.»</p>\r\n                        </div>\r\n                        <Col md={4}>\r\n                            <Image style={{width: 450, height:250}} src=\"https://makey-shop.by/assets/images/products/668/115-08-51.jpg\"/>\r\n                            <br/>\r\n                            <br/>\r\n                        </Col>\r\n\r\n                        <Button variant={\"outline-info\"} href=\"https://www.microsoft.com/ru-by\">Подробнее</Button>\r\n\r\n                    </div>\r\n                    <div className=\"bg-light mr-md-3 pt-3 px-3 pt-md-2 px-md-3 text-center overflow-hidden\">\r\n                        <div className=\"my-3 py-3\">\r\n                            <h2 className=\"display-5\">Коллекция \"Геометрия\"</h2>\r\n                            <p className=\"lead\">«Минимализм.»</p>\r\n\r\n                        </div>\r\n                        <Col md={4}>\r\n                            <Image style={{width: 450, height:250}} src=\"https://scontent-frt3-2.xx.fbcdn.net/v/t31.18172-8/26221186_1701938546535866_504527107699320395_o.jpg?_nc_cat=100&ccb=1-7&_nc_sid=9267fe&_nc_ohc=vJhg86qBKKwAX-SxXIo&_nc_ht=scontent-frt3-2.xx&oh=00_AfBB5GBIF5Sr1aId_-Oc9p7PDrZM3wNrT0Lb-bdnnMeHgg&oe=6473C6B7\"/>\r\n                            <br/>\r\n                            <br/>\r\n                        </Col>\r\n\r\n                        <Button variant={\"outline-info\"} href=\"https://about.google/\">Подробнее</Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"d-md-flex flex-md-equal w-150 my-md-3 pl-md-3\">\r\n                    <div className=\"bg-light mr-md-3 pt-3 px-3 pt-md-2 px-md-3 text-center overflow-hidden\">\r\n                        <div className=\"my-3 p-3\">\r\n                            <h2 className=\"display-5\">Коллекция \"Венеция\"</h2>\r\n                            <p className=\"lead\">«Изящество.»</p>\r\n                        </div>\r\n                        <Col md={4}>\r\n                            <Image style={{width: 450, height:250}} src=\"https://static.insales-cdn.com/images/products/1/2931/155741043/large_p_ibjk_65Vc.jpg\"/>\r\n                            <br/>\r\n                            <br/>\r\n                        </Col>\r\n\r\n                        <Button variant={\"outline-info\"} href=\"https://www.ableton.com/\">Подробнее</Button>\r\n\r\n                    </div>\r\n                    <div className=\"bg-light mr-md-3 pt-3 px-3 pt-md-2 px-md-3 text-center overflow-hidden\">\r\n                        <div className=\"my-3 py-3\">\r\n                            <h2 className=\"display-5\">Коллекция \"Ар-Нуво\"</h2>\r\n                            <p className=\"lead\">Элегенатность.»</p>\r\n\r\n                        </div>\r\n                        <Col md={4}>\r\n                            <Image style={{width: 450, height:250}} src=\"http://metasalon.by/wp-content/uploads/2019/04/%D0%BC%D0%B0%D0%BA%D0%B5%D0%B9.jpg\"/>\r\n                            <br/>\r\n                            <br/>\r\n                        </Col>\r\n\r\n                        <Button variant={\"outline-info\"} href=\"https://www.alludo.com/en/\">Подробнее</Button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n            </Container>\r\n        );\r\n    };\r\n\r\n\r\n    export default AboutUsPage;","/app/src/pages/MakeOrderPage.js",["147"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Container, Form, Row} from \"react-bootstrap\";\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {fetchOneDevice} from \"../http/deviceAPI\";\r\nimport { makeOrder } from \"../http/orderApi\";\r\nimport {SHOP_ROUTE} from \"../utils/consts\";\r\n\r\nconst MakeOrderPage = () => {\r\n    const [device, setDevice] = useState({info: []})\r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }, [])\r\n    const [email, setEmail] = useState('');\r\n    const click = async () => {\r\n        try {\r\n            await makeOrder(email, id);\r\n            history.push(SHOP_ROUTE);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            <div className=\"card text-center\">\r\n                <div className=\"card-header\">\r\n                    <h1 color=\"lightgreen\">Оформление заказа</h1>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <Row className=\"d-flex flex-column m-3\">\r\n                        <h3>Укажите контактные данные</h3>\r\n                        <Form className=\"card-title\">\r\n                            <Form.Control\r\n                                className=\"mt-3\"\r\n                                placeholder=\"Уважаемый пользователь, укажите свою действительную эл. почту.\r\n                                 Вам вышлют ключ продукта для его активации после вашей оплаты.\"\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                            />\r\n                        </Form>\r\n                    </Row>\r\n                    <p className=\"card-text\"><div>Ваш заказ: {device.name}, стоимостью {device.price} белорусских рублей</div></p>\r\n\r\n                        <Button\r\n                            variant={\"outline-info\"}\r\n                            onClick={click}\r\n                        >\r\n                            Отправить\r\n                        </Button>\r\n\r\n                </div>\r\n                <div className=\"card-footer text-success\">\r\n                    © 2021 SuperSoft Co.\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MakeOrderPage;\r\n","/app/src/pages/DevicePage.js",["148","149","150","151","152","153","154","155"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Container, Form, Image, Row} from \"react-bootstrap\";\r\n\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    addInfo,\r\n    addToFav,\r\n    deleteInfo,\r\n    delToFav,\r\n    fetchOneDevice,\r\n    isFav, postInfo,\r\n    updateName,\r\n    updatePhoto,\r\n    updatePrice\r\n} from \"../http/deviceAPI\";\r\nimport {ORDER_MAKE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {Context} from \"../index\";\r\nimport {deleteDevice} from \"../http/deviceAPI\";\r\n\r\nimport star from '../assets/star.png';\r\nimport goldStar from '../assets/goldStar.png';\r\nimport {changePhoto} from \"../http/userAPI\";\r\n\r\nconst DevicePage = () => {\r\n    const [addInfo, setAddInfo] = useState(false)\r\n    const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n    const [editPrice, setEditPrice] = useState(false)\r\n    const [editName, setEditName] = useState(false)\r\n    const [file, setFile] = useState(null)\r\n\r\n    const [saveButtonDisabled, setSaveButtonDisabled] = useState(true)\r\n\r\n    const history = useHistory()\r\n    const {user} = useContext(Context)\r\n    const [isAdmin, setIsAdmin] = useState(user.isAdmin)\r\n    // const [isAdmin, setIsAdmin] = useState(false)\r\n    const [device, setDevice] = useState({info: []})\r\n\r\n    const [newPrice, setNewPrice] = useState(device.price);\r\n    const [newName, setNewName] = useState(device.name);\r\n    const [newInfoTitle, setNewInfoTitle] = useState(\"\")\r\n    const [newInfoDescription, setNewInfoDescription] = useState(\"\")\r\n\r\n    const {id} = useParams()\r\n    const toggleFavorite = async () => {\r\n        if (isFavorite) {\r\n            await delToFav(id, user.id);\r\n        } else {\r\n            await addToFav(id, user.id);\r\n        }\r\n\r\n        setIsFavorite(!isFavorite);\r\n    };\r\n\r\n    const handlePriceChange = (event) => {\r\n        setNewPrice(event.target.value);\r\n    };\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value);\r\n    };\r\n\r\n    const handleInfoTitleChange = (event) => {\r\n        setNewInfoTitle(event.target.value)\r\n    }\r\n\r\n    const handleInfoDescriptionChange = (event) => {\r\n        setNewInfoDescription(event.target.value)\r\n    }\r\n\r\n    useEffect(async () => {\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n        let res = await isFav(id, user.id)\r\n        setIsFavorite(res)\r\n\r\n    }, [])\r\n\r\n    const click = async () => {\r\n        try {\r\n            await deleteDevice(id);\r\n            history.push(SHOP_ROUTE);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const handleSubmitPrice = async (event) => {\r\n        event.preventDefault();\r\n        const data = await updatePrice(id, newPrice);\r\n        setNewPrice(data.price)\r\n        setEditPrice(false)\r\n    };\r\n\r\n    const handleSubmitName = async (event) => {\r\n        event.preventDefault();\r\n        const data = await updateName(id, newName);\r\n        setNewName(data.name)\r\n        setEditName(false)\r\n    };\r\n\r\n    useEffect(() => {\r\n        setNewPrice(device.price)\r\n        setNewName(device.name)\r\n    }, [device.price, device.name]);\r\n\r\n    // photo\r\n    const selectFile = e => {\r\n        const selectedFile = e.target.files[0]\r\n        if (selectedFile && selectedFile.type.startsWith('image/')) {\r\n            setFile(selectedFile)\r\n            setSaveButtonDisabled(false)\r\n        } else {\r\n            setFile(null)\r\n            setSaveButtonDisabled(true)\r\n        }\r\n    }\r\n\r\n    const savePhoto = async () => {\r\n        if (saveButtonDisabled) return null\r\n        let data = await updatePhoto(id ,file)\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }\r\n\r\n    const del_info = async (infoId) => {\r\n        const data = await deleteInfo(infoId)\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }\r\n\r\n    const handleSubmitInfo = async () => {\r\n        if (!newInfoTitle || !newInfoDescription) {\r\n            return null\r\n        }\r\n        setAddInfo(false)\r\n        const data = await postInfo(id, newInfoTitle, newInfoDescription)\r\n        setNewInfoTitle(\"\")\r\n        setNewInfoDescription(\"\")\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row>\r\n                <Col md={7}>\r\n                    <Image style={{maxHeight:300}} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                    {\r\n                        isAdmin\r\n                            ? <div>\r\n                                <h4>Изменить фото:</h4>\r\n                                <Form.Control\r\n                                className=\"mt-3\"\r\n                                type=\"file\"\r\n                                onChange={selectFile}\r\n                                />\r\n                                <div\r\n                                    className=\"save_photo\"\r\n                                    onClick={savePhoto}\r\n                                    disabled={saveButtonDisabled}\r\n                                    style={{opacity: saveButtonDisabled ? 0.5 : 1}}\r\n                                >\r\n                                    Сохранить фото\r\n                                </div>\r\n                            </div>\r\n                            : <></>\r\n                    }\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card\r\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\r\n                        style={{width: 450, height: 300, fontSize: 34}}\r\n                    >\r\n                        {\r\n                            editName\r\n                                ? <><input style={{width: 300, height: 45}} value={newName} onChange={handleNameChange} type=\"text\"></input><div className=\"save_btn\" onClick={handleSubmitName}><p>Save</p></div></>\r\n                                : <h5 onClick={() => isAdmin && setEditName(true)}>{newName}</h5>\r\n                        }\r\n                        {\r\n                            editPrice\r\n                                ? <><input style={{width: 300, height: 45}} value={newPrice} onChange={handlePriceChange} type=\"number\" min=\"1\"></input><div className=\"save_btn\" onClick={handleSubmitPrice}><p>Save</p></div></>\r\n                                : <h3 onClick={() => isAdmin && setEditPrice(true)} color=\"skyblue\">Цена: {newPrice} руб.</h3>\r\n                        }\r\n                        <Button className='btn btn-outline-success text-lg-end' onClick={() => history.push(ORDER_MAKE + '/' + device.id)} variant={\"outline-success\"}>Оформить предзаказ</Button>\r\n                        <div onClick={toggleFavorite}>\r\n                            <img style={{maxHeight: 15}} src={isFavorite ? goldStar : star} alt=\"Favorite\" />\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1>Характеристики</h1>\r\n                {device.info.map((info, index) =>\r\n                    <Row style={{background: index % 2 === 0 ? 'seagreen' : 'dark', padding: 8}}>\r\n                        <div className=\"info_row_container\">\r\n                            <div className=\"ingo_text\">{info.title}: {info.description}</div>\r\n                            <div className=\"delete_ingo_btn\" onClick={() => del_info(info.id)}>x</div>\r\n                        </div>\r\n                    </Row>\r\n                    // key={info.id} нет тк при удалении одинаковые цвета подряд\r\n                )}\r\n            </Row>\r\n            <div className=\"device_buttons_container\">\r\n                {\r\n                    addInfo && <div className=\"add_info_container\">\r\n                        <div>Title: <input value={newInfoTitle} onChange={handleInfoTitleChange} type={\"text\"}/></div>\r\n                        <div>Description: <input value={newInfoDescription} onChange={handleInfoDescriptionChange} type={\"text\"}/></div>\r\n                        <div\r\n                            className=\"save_btn\"\r\n                            onClick={handleSubmitInfo}\r\n                            disabled={!newInfoTitle || !newInfoDescription}\r\n                            style={{ opacity: newInfoTitle && newInfoDescription ? 1 : 0.5 }}\r\n                        >\r\n                            <p>Save</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                { (user.isAdmin  && !addInfo) && <button className='btn btn-primary' onClick={() => setAddInfo(true)}>Добавить характеристику</button> }\r\n                { user.isAdmin ? <button className='btn btn-danger' onClick={() => click()}>Удалить</button> : \"\"}\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DevicePage;\r\n","/app/src/pages/Shop.js",["156","157"],"import React, {useContext, useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    const {device} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        fetchDevices(null, null, 1, null, 4 ).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, device.name, 4).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand, device.name])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-3\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar/>\r\n                    <DeviceList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n","/app/src/pages/Auth.js",["158"],"import React, {useContext, useState} from 'react';\r\nimport {Container, Form} from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {login, registration} from \"../http/userAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data;\r\n            if (isLogin) {\r\n                data = await login(email, password);\r\n            } else {\r\n                data = await registration(email, password);\r\n            }\r\n            user.setUser(data.user)\r\n            console.log(data.user)\r\n            user.setIsAuth(true)\r\n            if (data.user.role == \"ADMIN\") {\r\n                user.setIsAdmin(true)\r\n            } else {\r\n                user.setIsAdmin(false)\r\n            }\r\n            history.push(SHOP_ROUTE)\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container\r\n\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n            style={{height: window.innerHeight - 54}}\r\n        >\r\n            <Card style={{width: 600}} className=\"p-5\">\r\n\r\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\r\n                <Form className=\"d-flex flex-column\">\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите вашу эл. почту\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите ваш пароль\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\r\n                        {isLogin ?\r\n                            <div>\r\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\r\n                            </div>\r\n                        }\r\n                        <Button\r\n                            variant={\"outline-success\"}\r\n                            onClick={click}\r\n                        >\r\n                            {isLogin ? 'Войти' : 'Регистрация'}\r\n                        </Button>\r\n                    </Row>\r\n\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;\r\n","/app/src/pages/Basket.js",[],"/app/src/pages/Admin.js",[],"/app/src/http/orderApi.js",["159"],"import {$authHost, $host} from \"./index\";\r\n\r\nexport const makeOrder = async (email, id) => {\r\n    const {data} = await $host.post('api/order/create', {email, id})\r\n    return data\r\n}\r\n","/app/src/http/deviceAPI.js",["160","161","162"],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const {data} = await $authHost.post('api/brand', brand)\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const {data} = await $host.get('api/brand', )\r\n    return data\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    const {data} = await $authHost.post('api/device', device)\r\n    return data\r\n}\r\n\r\nexport const fetchDevices = async (typeId, brandId, page, name, limit = 3) => {\r\n    const {data} = await $host.get('api/device', {params: {\r\n            typeId, brandId, page, limit, name\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const {data} = await $host.get('api/device/' + id)\r\n    return data\r\n}\r\n\r\nexport const deleteDevice = async (id) => {\r\n    const {data} = await $host.post('api/device/delete/' + id)\r\n    return data;\r\n}\r\n\r\nexport const addToFav = async (item, user) => {\r\n    await $host.post('api/fav/add_to_fav/', {itemId: item, userId: user})\r\n}\r\n\r\nexport const delToFav = async (item, user) => {\r\n    await $host.post('api/fav/del_to_fav/', {itemId: item, userId: user})\r\n}\r\n\r\nexport const myFav = async (id) => {\r\n    const {data} = await $host.post('api/fav/get_all/', {userId: id})\r\n    return data\r\n}\r\n\r\nexport const isFav = async (item, user) => {\r\n    const {data} = await $host.post('api/fav/is_fav/', {itemId: item, userId: user})\r\n    return data.isFavorite\r\n}\r\n\r\nexport const updatePrice = async (id, newPrice) => {\r\n    const { data } = await $host.put(`api/device/price/${id}`, { price: newPrice });\r\n    return data;\r\n};\r\n\r\nexport const updateName = async (id, newName) => {\r\n    const { data } = await $host.put(`api/device/name/${id}`, { name: newName });\r\n    return data;\r\n};\r\n\r\nexport const updatePhoto = async (id, photo) => {\r\n    const formData = new FormData();\r\n    formData.append('photo', photo);\r\n    const {data} = await $host.patch(`api/device/photo/${id}`, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n    return data;\r\n}\r\n\r\nexport const deleteInfo = async (id) => {\r\n    const data = await $host.delete(`api/info/${id}`)\r\n}\r\n\r\nexport const postInfo = async (id, title, description) => {\r\n    const data = await $host.post('api/info/', {id: id, title: title, description: description})\r\n}","/app/src/components/Pages.js",[],"/app/src/components/TypeBar.js",["163"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst TypeBar = observer(() => {\r\n    const {device} = useContext(Context)\r\n    return (\r\n        <ul className=\"list-group list-group-item-dark\">\r\n            <ListGroup>\r\n            {device.types.map(type =>\r\n                <ListGroup.Item\r\n                    style={{cursor: 'pointer'}}\r\n                    text = \"#eee9fa\"\r\n                    active={type.id === device.selectedType.id}\r\n                    className=\"p-3 ml-2\"\r\n                    onClick={() => device.setSelectedType(type)}\r\n                    border={type.id === device.selectedType.id ? '#eee9fa' : '#eee9fa'}\r\n                    key={type.id}\r\n                >\r\n                    {type.name}\r\n\r\n                </ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n            </ul>);\r\n\r\n});\r\n\r\nexport default TypeBar;\r\n","/app/src/components/DeviceList.js",[],"/app/src/components/BrandBar.js",[],"/app/src/components/modals/CreateDevice.js",["164","165"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [file, setFile] = useState(null)\r\n    const [info, setInfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', `${price}`)\r\n        formData.append('img', file)\r\n        formData.append('brandId', device.selectedBrand.id)\r\n        formData.append('typeId', device.selectedType.id)\r\n        formData.append('info', JSON.stringify(info))\r\n        createDevice(formData).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить наименование\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип изделия\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedType(type)}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите цвет\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.brands.map(brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedBrand(brand)}\r\n                                    key={brand.id}\r\n                                >\r\n                                    {brand.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название изделия\"\r\n                    />\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость изделия\"\r\n                        type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                    <Button\r\n                        variant={\"outline-light\"}\r\n                        onClick={addInfo}\r\n                    >\r\n                        Добавить новую характеристику\r\n                    </Button>\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Характеристика\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.description}\r\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\r\n                                    placeholder=\"Описание\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant={\"outline-danger\"}\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateDevice;\r\n","/app/src/components/modals/CreateType.js",[],"/app/src/components/modals/CreateBrand.js",["166"],"import React, {useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {createBrand, createType} from \"../../http/deviceAPI\";\r\n\r\nconst CreateBrand = ({show, onHide}) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const addBrand = () => {\r\n        createBrand({name: value}).then(data => {\r\n            setValue('')\r\n            onHide()\r\n        })\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить цвет\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={value}\r\n                        onChange={e => setValue(e.target.value)}\r\n                        placeholder={\"Введите цвет\"}\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateBrand;\r\n","/app/src/components/DeviceItem.js",["167","168"],"import React from 'react';\r\nimport {Card, Col} from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport star from '../assets/star.png'\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {DEVICE_ROUTE} from \"../utils/consts\";\r\n\r\nconst DeviceItem = ({device}) => {\r\n    const history = useHistory()\r\n    return (\r\n        <Col md={6} className={\"mt-3\"} onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}>\r\n\r\n            <div className=\"card mb-4 box-shadow\">\r\n                <Image style={{maxHeight:300}} src={process.env.REACT_APP_API_URL + device.img}/>\r\n\r\n\r\n\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{device.name}</p>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <div className=\"btn-group\">\r\n                            <button type=\"button\" className=\"btn btn-sm btn-outline-info\">Подробнее</button>\r\n\r\n                        </div>\r\n                        <small className=\"text-success\">{device.price} руб.</small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default DeviceItem;\r\n","/app/src/pages/UserPage.js",["169","170"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Container, Form, Image} from \"react-bootstrap\";\r\nimport {useHistory,} from \"react-router-dom\";\r\nimport {Context} from \"../index\";\r\nimport {fetchOneDevice, myFav} from \"../http/deviceAPI\";\r\nimport {DEVICE_ROUTE} from \"../utils/consts\";\r\nimport {changePhoto} from \"../http/userAPI\";\r\n\r\n\r\n\r\nconst UserPage = () => {\r\n    const {user} = useContext(Context)\r\n    const history = useHistory()\r\n    const [devices, setDevices] = useState([])\r\n    const [file, setFile] = useState(null)\r\n    const [saveButtonDisabled, setSaveButtonDisabled] = useState(true)\r\n    useEffect(async () => {\r\n        let res = await myFav(user.id)\r\n        let devices = [];\r\n\r\n        for (let i = 0; i < res.length; i++) {\r\n            let device = await fetchOneDevice(res[i].deviceId);\r\n            devices.push(device);\r\n        }\r\n        setDevices(devices);\r\n    }, [])\r\n\r\n    const selectFile = e => {\r\n        const selectedFile = e.target.files[0]\r\n        if (selectedFile && selectedFile.type.startsWith('image/')) {\r\n            setFile(selectedFile)\r\n            setSaveButtonDisabled(false)\r\n        } else {\r\n            setFile(null)\r\n            setSaveButtonDisabled(true)\r\n        }\r\n    }\r\n\r\n    const savePhoto = async () => {\r\n        if (saveButtonDisabled) return null\r\n        let data = await changePhoto(file)\r\n        user.setUser(data)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h4>Изменить фото:</h4>\r\n            <Form.Control\r\n                className=\"mt-3\"\r\n                type=\"file\"\r\n                onChange={selectFile}\r\n            />\r\n            <div\r\n                className=\"save_photo\"\r\n                onClick={savePhoto}\r\n                disabled={saveButtonDisabled}\r\n                style={{opacity: saveButtonDisabled ? 0.5 : 1}}\r\n            >\r\n                Сохранить фото\r\n            </div>\r\n            <hr/>\r\n            <h4>Избранные товары:</h4>\r\n            <div>\r\n                {devices.map((device, index) => (\r\n                    <div\r\n                        className='fav_item'\r\n                        key={index}\r\n                        onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}\r\n                    >\r\n                        <p><b>{device.name}</b></p>\r\n                        <Image style={{maxHeight:50}} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                        <p>Цена: {device.price} р.</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default UserPage;",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":7,"column":16,"nodeType":"177","messageId":"178","endLine":7,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":13,"column":16,"nodeType":"181","endLine":19,"endColumn":6},{"ruleId":"182","severity":1,"message":"183","line":16,"column":23,"nodeType":"184","messageId":"185","endLine":16,"endColumn":25},{"ruleId":"179","severity":1,"message":"186","line":19,"column":8,"nodeType":"187","endLine":19,"endColumn":10,"suggestions":"188"},{"ruleId":"175","severity":1,"message":"189","line":1,"column":29,"nodeType":"177","messageId":"178","endLine":1,"endColumn":32},{"ruleId":"175","severity":1,"message":"190","line":6,"column":22,"nodeType":"177","messageId":"178","endLine":6,"endColumn":33},{"ruleId":"179","severity":1,"message":"180","line":23,"column":15,"nodeType":"181","endLine":27,"endColumn":6},{"ruleId":"179","severity":1,"message":"186","line":27,"column":8,"nodeType":"187","endLine":27,"endColumn":10,"suggestions":"191"},{"ruleId":"175","severity":1,"message":"192","line":4,"column":5,"nodeType":"177","messageId":"178","endLine":4,"endColumn":17},{"ruleId":"175","severity":1,"message":"193","line":13,"column":8,"nodeType":"177","messageId":"178","endLine":13,"endColumn":14},{"ruleId":"175","severity":1,"message":"194","line":1,"column":28,"nodeType":"177","messageId":"178","endLine":1,"endColumn":36},{"ruleId":"175","severity":1,"message":"195","line":2,"column":17,"nodeType":"177","messageId":"178","endLine":2,"endColumn":21},{"ruleId":"175","severity":1,"message":"196","line":3,"column":23,"nodeType":"177","messageId":"178","endLine":3,"endColumn":34},{"ruleId":"175","severity":1,"message":"197","line":6,"column":9,"nodeType":"177","messageId":"178","endLine":6,"endColumn":17},{"ruleId":"175","severity":1,"message":"198","line":7,"column":29,"nodeType":"177","messageId":"178","endLine":7,"endColumn":35},{"ruleId":"175","severity":1,"message":"199","line":15,"column":19,"nodeType":"177","messageId":"178","endLine":15,"endColumn":25},{"ruleId":"179","severity":1,"message":"200","line":14,"column":8,"nodeType":"187","endLine":14,"endColumn":10,"suggestions":"201"},{"ruleId":"175","severity":1,"message":"202","line":6,"column":5,"nodeType":"177","messageId":"178","endLine":6,"endColumn":12},{"ruleId":"175","severity":1,"message":"203","line":22,"column":9,"nodeType":"177","messageId":"178","endLine":22,"endColumn":20},{"ruleId":"175","severity":1,"message":"204","line":36,"column":21,"nodeType":"177","messageId":"178","endLine":36,"endColumn":31},{"ruleId":"179","severity":1,"message":"180","line":72,"column":15,"nodeType":"181","endLine":77,"endColumn":6},{"ruleId":"179","severity":1,"message":"205","line":77,"column":8,"nodeType":"187","endLine":77,"endColumn":10,"suggestions":"206"},{"ruleId":"175","severity":1,"message":"207","line":121,"column":13,"nodeType":"177","messageId":"178","endLine":121,"endColumn":17},{"ruleId":"175","severity":1,"message":"207","line":126,"column":15,"nodeType":"177","messageId":"178","endLine":126,"endColumn":19},{"ruleId":"175","severity":1,"message":"207","line":135,"column":15,"nodeType":"177","messageId":"178","endLine":135,"endColumn":19},{"ruleId":"179","severity":1,"message":"208","line":23,"column":8,"nodeType":"187","endLine":23,"endColumn":10,"suggestions":"209"},{"ruleId":"179","severity":1,"message":"208","line":30,"column":8,"nodeType":"187","endLine":30,"endColumn":77,"suggestions":"210"},{"ruleId":"182","severity":1,"message":"183","line":31,"column":32,"nodeType":"184","messageId":"185","endLine":31,"endColumn":34},{"ruleId":"175","severity":1,"message":"211","line":1,"column":9,"nodeType":"177","messageId":"178","endLine":1,"endColumn":18},{"ruleId":"175","severity":1,"message":"212","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":18},{"ruleId":"175","severity":1,"message":"207","line":84,"column":11,"nodeType":"177","messageId":"178","endLine":84,"endColumn":15},{"ruleId":"175","severity":1,"message":"207","line":88,"column":11,"nodeType":"177","messageId":"178","endLine":88,"endColumn":15},{"ruleId":"175","severity":1,"message":"213","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":11},{"ruleId":"175","severity":1,"message":"214","line":5,"column":36,"nodeType":"177","messageId":"178","endLine":5,"endColumn":48},{"ruleId":"179","severity":1,"message":"208","line":18,"column":8,"nodeType":"187","endLine":18,"endColumn":10,"suggestions":"215"},{"ruleId":"175","severity":1,"message":"216","line":4,"column":22,"nodeType":"177","messageId":"178","endLine":4,"endColumn":32},{"ruleId":"175","severity":1,"message":"195","line":2,"column":9,"nodeType":"177","messageId":"178","endLine":2,"endColumn":13},{"ruleId":"175","severity":1,"message":"217","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":12},{"ruleId":"179","severity":1,"message":"180","line":17,"column":15,"nodeType":"181","endLine":26,"endColumn":6},{"ruleId":"179","severity":1,"message":"218","line":26,"column":8,"nodeType":"187","endLine":26,"endColumn":10,"suggestions":"219"},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"no-unused-vars","'getMe' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["222"],"'set' is defined but never used.","'ADMIN_ROUTE' is defined but never used.",["223"],"'BASKET_ROUTE' is defined but never used.","'Basket' is defined but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'LOGIN_ROUTE' is defined but never used.","'observer' is defined but never used.","'device' is defined but never used.","'logOut' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["224"],"'addInfo' is defined but never used.","'changePhoto' is defined but never used.","'setIsAdmin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'user.id'. Either include them or remove the dependency array.",["225"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["226"],["227"],"'$authHost' is defined but never used.","'jwt_decode' is defined but never used.","'Col' is defined but never used.","'fetchDevices' is defined but never used.",["228"],"'createType' is defined but never used.","'star' is defined but never used.","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["229"],"no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"230","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"237","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [user]",{"range":"244","text":"245"},{"range":"246","text":"245"},"Update the dependencies array to be: [id]",{"range":"247","text":"248"},"Update the dependencies array to be: [id, user.id]",{"range":"249","text":"250"},"Update the dependencies array to be: [device]",{"range":"251","text":"252"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device.name, device]",{"range":"253","text":"254"},{"range":"255","text":"252"},"Update the dependencies array to be: [user.id]",{"range":"256","text":"257"},[785,787],"[user]",[934,936],[552,554],"[id]",[2369,2371],"[id, user.id]",[904,906],"[device]",[1156,1225],"[device.page, device.selectedType, device.selectedBrand, device.name, device]",[764,766],[917,919],"[user.id]"]